# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build with Maven
        run: mvn -B package --file pom.xml

  github:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'style') }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -Pgithub
        env:
          GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

  central:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'style') }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Deploy with Maven
        run: mvn -B clean deploy -Pmaven-central
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
  release:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'style') }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@v1.6.1
        with:
          token: ${{ github.token }}

      - id: get-version
        uses: jactions/maven-version@v1.2.0

      - name: Creatre github release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          release_name: ${{ steps.get-version.outputs.version }}
          body: |
            Grab the new version from https://s01.oss.sonatype.org/content/repositories/releases/io/github/kojiv/developerkit/${{ steps.get-version.outputs.version }} by using it in your dependencies

            ```
            <dependencies>
            	<dependency>
            	    <groupId>io.github.kojiv</groupId>
            	    <artifactId>developerkit</artifactId>
            	    <version>${{ steps.get-version.outputs.version }}</version>
            	</dependency>
            </dependencies>
            ```
            ### Changelog
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false